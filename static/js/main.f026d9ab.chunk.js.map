{"version":3,"sources":["components/Header.js","pages/HomePage.js","components/FavoritesPets.js","pages/FavoritesPage.js","pages/DetailsPage.js","components/Main.js","components/Sidebar.js","constants.js","helpers.js","components/PetList.js","components/Pet.js","components/Filters.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","id","to","HomePage","props","filterPets","breed","setState","activeFilter","search","val","searchValue","state","document","title","onFilterPets","this","onSearch","React","Component","FavoritesPets","console","log","pet","age","name","image","description","style","margin","src","alt","fontSize","FavoritesPage","favouritePets","Axios","get","then","res","data","map","owner","key","Math","random","DetailsPage","detail","match","params","axios","detailData","published_at","Main","exact","path","component","Sidebar","breedOptions","stringContains","str","toLowerCase","indexOf","PetList","getFavouritePets","pets","_pets","filter","filteredPet","handleScroll","windowHeight","window","innerHeight","documentElement","offsetHeight","body","html","docHeight","max","scrollHeight","clientHeight","pageYOffset","setTimeout","index","yukleniyor","fetch","rootApiURL","resp","json","addEventListener","removeEventListener","prevProps","newList","slice","Yukleniyor","EmptyPets","Pets","length","isFavourite","some","favouritePet","Pet","addFavourite","post","removeFavourite","selectedItemId","find","mockApiId","delete","onScroll","detailPage","height","onClick","type","class","Filters","classNames","e","preventDefault","Search","changeValue","target","value","onChange","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f026d9ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Pets</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/\">Homepage</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/favoriler\">Favorites</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Sidebar, PetList} from \"../components\";\r\n\r\n\r\nclass HomePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeFilter: \"\",\r\n            searchValue: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home Page\";\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = \"Pets App\";\r\n    }\r\n\r\n    filterPets = (breed) => {\r\n        this.setState({\r\n            activeFilter: breed\r\n        });\r\n    }\r\n\r\n    search = (val) => {\r\n        this.setState({\r\n            searchValue: val\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3\">\r\n                            <Sidebar\r\n                                onFilterPets={this.filterPets}\r\n                                activeFilter={this.state.activeFilter}\r\n                                onSearch={this.search}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                            <PetList\r\n                                activeFilter={this.state.activeFilter}\r\n                                searchValue={this.state.searchValue}\r\n                            />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\n\r\nfunction FavoritesPets(props) {\r\n    console.log(props)\r\n    const { age, name, image, breed, description} = props.pet;\r\n    return(\r\n            \r\n        <div  style={{margin: \"auto\"}} className=\"col-lg-4 col-md-4 mb-4\">\r\n            <div className=\"card h-100\">\r\n                <img className=\"card-img-top\"  src={image} alt=\"\" />\r\n                  <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">\r\n                        <a href=\"#\">{name}</a>\r\n                        <div>\r\n                            <span className=\"badge badge-primary\" style={{fontSize: \"12px\"}}>{breed}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"badge badge-warning\" style={{fontSize: \"12px\"}}>{age}</span>\r\n                        </div>\r\n                        </h4>\r\n                        <p className=\"card-text\">\r\n                            {description}\r\n                        </p>\r\n                        </div>\r\n                        \r\n            </div>\r\n        </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default FavoritesPets;","import React from 'react';\r\nimport FavoritesPets from \"../components/FavoritesPets\"\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nclass FavoritesPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            favouritePets: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.title = \"Favourites Page\"\r\n       \r\n       \r\n        Axios\r\n          .get(\"http://5dd7af92505c590014d3b4ac.mockapi.io/favorites\")\r\n          .then(res =>\r\n            this.setState(\r\n              {\r\n                favouritePets: res.data\r\n              }\r\n            )\r\n          );\r\n      }\r\n\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2>Favorites Page</h2>\r\n                {this.state.favouritePets.map(pet => {\r\n                    if(pet.pet && pet.owner ===\"Engin Can\"){\r\n                        return <FavoritesPets key={Math.random()} {...pet}\r\n                        />\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n\r\n\r\n    } \r\n    \r\n}\r\n\r\nexport default FavoritesPage;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\n//Bunun propsu nereye bağlanmış oldu? Router içerisindeki \":\" işaretini kullanmazsam this.props çıktı vermiyor. Bu da Router'ın aslında buraya props gönderdiği anlamına geliyor yanılmıyorsam?\r\n//Router'a verdiğim \":\" işaretinden sonra id bilgisi buraya, match.params içerisinde nasıl geliyor? Pet.js dosyasında Link to içerisinde id'yi vermem, Router'ı bundan nasıl haberdar ediyor? \r\n// Buna tekrar veri çekmektense PetList üzerinde çektiğim veriyi buraya props olarak geçip kullansam olmaz mıydı? Tekrar veri çekmek neden gerekli?\r\n\r\nclass DetailsPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            detail: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        document.title = \"Details Page\"\r\n\r\n        const id = this.props.match.params.id;\r\n        \r\n        \r\n        axios.get(`http://5dd7af92505c590014d3b4ac.mockapi.io/pets/${id}`)\r\n        .then( res => {\r\n            const detailData = res.data;\r\n            this.setState({\r\n                detail: detailData\r\n            })\r\n        })\r\n\r\n       \r\n       /* //Alternative 2 - Fetch\r\n\r\n         fetch(`http://5dd7af92505c590014d3b4ac.mockapi.io/pets/${id}`)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                detail: data\r\n             })\r\n         })*/\r\n    }\r\n    render(){\r\n        const { age, name, published_at, image, breed, description} = this.state.detail;\r\n        return(\r\n            \r\n            <div  style={{margin: \"auto\"}} className=\"col-lg-6 col-md-4 mb-4\">\r\n                <div className=\"card h-100\">\r\n                    <img className=\"card-img-top\"  src={image} alt=\"\" />\r\n                      <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">\r\n                            <a href=\"#\">{name}</a>\r\n                            <div>\r\n                                <span className=\"badge badge-primary\" style={{fontSize: \"12px\"}}>{breed}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"badge badge-warning\" style={{fontSize: \"12px\"}}>{age}</span>\r\n                            </div>\r\n                            </h4>\r\n                            <p className=\"card-text\">\r\n                                {description}\r\n                            </p>\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default DetailsPage;\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router\";\r\nimport {FavoritesPage, HomePage, DetailsPage} from \"../pages\";\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomePage}/>\r\n                <Route exact path=\"/favoriler\" component={FavoritesPage}/>\r\n                <Route exact path=\"/details/:id\" component={DetailsPage}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Filters} from \"../components\";\r\nimport {Search} from \"../components\";\r\n\r\nfunction Sidebar(props) {\r\n    return (\r\n        <div>\r\n            <Search onSearch={props.onSearch} />\r\n            <Filters\r\n                onFilterPets={props.onFilterPets}\r\n                activeFilter={props.activeFilter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nconst rootApiURL = \"http://5dd7af92505c590014d3b4ac.mockapi.io/\";\r\n\r\nconst petsPath = \"pets\";\r\n\r\n\r\n\r\nexport const getPets = () => {\r\n    return fetch(rootApiURL + petsPath)\r\n        .then((resp) => resp.json())\r\n};\r\n\r\n\r\n\r\nexport const breedOptions = [\r\n    \"Cavalier King Charles Spaniel\",\r\n    \"Golden Retriever\",\r\n    \"Beagle\",\r\n    \"French Bulldog\"\r\n];","export const stringContains = (str, search) => {\r\n    return str.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n};","import React from 'react';\r\nimport {Pet} from \"../components\";\r\nimport {getPets} from \"../constants\";\r\nimport {stringContains} from \"../helpers\";\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nclass PetList extends React.Component{\r\n    breed;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _pets: [],\r\n            pets: [],\r\n            yukleniyor: true,\r\n            favouritePets: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPets().then((data) => {\r\n            this.setState({\r\n                _pets: data,\r\n                pets: data,\r\n                yukleniyor: false,\r\n                index: 0\r\n            })\r\n        })\r\n        \r\n        //when component is Mounted get data and save it to the state.\r\n        this.getFavouritePets();\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.activeFilter !== this.props.activeFilter){\r\n            this.filterPets();\r\n        }\r\n        if(prevProps.searchValue !== this.props.searchValue){\r\n            this.filterPets();\r\n        }\r\n    }\r\n\r\n    \r\n    getFavouritePets = () => {\r\n        Axios\r\n        .get(\"http://5dd7af92505c590014d3b4ac.mockapi.io/favorites\")\r\n        .then(res => this.setState({\r\n            favouritePets: res.data\r\n        }))\r\n    }\r\n\r\n    filterPets = () => {\r\n        if(!this.props.activeFilter){\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return stringContains(pet.name, this.props.searchValue)\r\n                })\r\n            })\r\n        }else{\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return pet.breed === this.props.activeFilter;\r\n                }).filter((filteredPet) => {\r\n                    return stringContains(filteredPet.name, this.props.searchValue)\r\n                })\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n    handleScroll = () => {\r\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n        const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n        const windowBottom = windowHeight + window.pageYOffset;\r\n        if (windowBottom >= docHeight) {\r\n            setTimeout(this.setState({\r\n                index: this.state.index+4\r\n            }), 1000) \r\n        } \r\n      }\r\n    \r\n\r\n    //Didnt' work out. When i click favoritepage and turn back to homepage afterwards, button restores itself as green.\r\n    /*toggleFavorite = (favoriteItem) => {\r\n        const newPets = this.state.pets.map(pet => {\r\n            if(pet.id === favoriteItem.id){\r\n                return {...pet, checked: !pet.checked}\r\n            }else{\r\n                return pet;\r\n            }\r\n        })  \r\n        this.setState({\r\n            pets: newPets\r\n        })\r\n    }*/\r\n\r\n    \r\n\r\n    render(){\r\n        const newList = this.state.pets.slice(0, this.state.index+4)\r\n        const Yukleniyor = <div>Loading...</div>;\r\n        const EmptyPets = <div>Could't Find Any Pets</div>;\r\n        const Pets =  [<h3>Total Pets Shown: {newList.length} </h3>,<div className=\"row\">\r\n            {\r\n                newList.map(pet=> {  \r\n                    const isFavourite = this.state.favouritePets.some(favouritePet => {\r\n                        if(favouritePet.pet && favouritePet.owner == \"Engin Can\"){\r\n                            return pet.id === favouritePet.pet.id\r\n                        }\r\n                    })  \r\n                    return  <Pet key={Math.random()} pet={pet}         \r\n                            favouritePets = {this.state.favouritePets}\r\n                            isFavourite = {isFavourite}\r\n                            getFavouritePets = {this.getFavouritePets}\r\n                             />\r\n                }) \r\n            }\r\n        </div>];\r\n        if(this.state.yukleniyor){\r\n            return Yukleniyor;\r\n        }else if(this.state.pets.length === 0){\r\n            return EmptyPets\r\n        }else{\r\n            return Pets;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default PetList;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Pet extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    \r\n    addFavourite = (pet) => {\r\n        //Önce tıklanan peti API'a ekle ki favoritePage güncellensin.\r\n        Axios\r\n        .post(\"http://5dd7af92505c590014d3b4ac.mockapi.io/favorites\", {\r\n            pet: pet,\r\n            owner: \"Engin Can\"\r\n        }).then(data => {\r\n            if(data){\r\n                this.props.getFavouritePets();\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    removeFavourite = (id) => {\r\n        /*//Önce PetListteki favoritePets state'inden çıkar ki butonu yeşile döndürsün.\r\n        this.props.removeFavouriteFromState(id);\r\n        //Daha sonra API'dan çıkar ki favoritePage güncellensin.\r\n        return fetch(url + '/' + MockAPIid, {\r\n          method: 'delete'\r\n        })\r\n        .then(response => response.json());*/\r\n       \r\n        \r\n        //Find the Item will be removed\r\n        const selectedItem = this.props.favouritePets.find(pet => {\r\n            return pet.pet.id === id;\r\n        })\r\n        //Determine its mockAPIid\r\n        const selectedItemId = selectedItem.mockApiId\r\n        \r\n        Axios\r\n        .delete(`http://5dd7af92505c590014d3b4ac.mockapi.io/favorites/${selectedItemId}`)\r\n        .then(data => {\r\n        if(data){\r\n            this.props.getFavouritePets();\r\n        }\r\n    })\r\n        \r\n\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {name, image, age, breed, id, onScroll } = this.props.pet;\r\n        const detailPage = `/details/${id}`;\r\n        console.log(this.props);\r\n        return(\r\n            <div  className=\"col-lg-6 col-md-4 mb-4\">\r\n            <div className=\"card h-100\">\r\n                <Link to={detailPage}>\r\n                    <img onScroll={onScroll} className=\"card-img-top\"  src={image} alt=\"\" style={{height: \"292px\"}}/>\r\n                </Link>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">\r\n                        <Link to={detailPage}>{name}</Link>\r\n                        <div>\r\n                            <span className=\"badge badge-primary\" style={{fontSize: \"12px\"}}>{breed}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"badge badge-warning\" style={{fontSize: \"12px\"}}>{age}</span>\r\n                        </div>\r\n                    </h4>\r\n                    \r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    \r\n                    {\r\n                        this.props.isFavourite\r\n                        ? <button onClick={() => this.removeFavourite(this.props.pet.id)} type=\"button\" class=\"btn btn-outline-danger\">Remove from Favorites</button>\r\n                        : <button onClick={() => this.addFavourite(this.props.pet)} type=\"button\" class=\"btn btn-outline-success\">Add to Favorites</button>\r\n                    }\r\n                    \r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Pet;\r\n","import React from 'react';\r\nimport {breedOptions} from \"../constants\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Filters(props) {\r\n    return (\r\n        <div>\r\n            <h4 className=\"my-4 text-left\">Breed</h4>\r\n            <ul>\r\n                <li className={\r\n                    classNames({\r\n                        \"list-group-item\": true,\r\n                        \"active\": !props.activeFilter,\r\n                    })\r\n                } onClick={() => {\r\n                    props.onFilterPets(\"\");\r\n                }}>All</li>\r\n                {\r\n                    breedOptions.map((breed) => {\r\n                        return <li\r\n                            key={breed}\r\n                            className={classNames({\r\n                                \"list-group-item\": true,\r\n                                \"active\": breed === props.activeFilter\r\n                                }\r\n                            )}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                props.onFilterPets(breed);\r\n                            }}>{breed}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    changeValue = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({\r\n            value: val\r\n        }, () => {\r\n            this.props.onSearch(val);\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h4>Search</h4>\r\n                <input type=\"text\"\r\n                       value={this.state.value}\r\n                       onChange={this.changeValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Header, Main} from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport  { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter><App /></HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}